      
version: "3.1"

services:
  db:
    image: mysql:8.0
    restart: always
    volumes:
      - ./manifest/sql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: cinemahouse
    ports:
      - "3307:3306"

  redis-master:
    image: "bitnami/redis:latest"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_REPLICATION_MODE=master
    ports:
      - "6379:6379"

  redis-replica:
    image: "bitnami/redis:latest"
    ports:
      - "6378:6378"
    depends_on:
      - redis-master
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PORT_NUMBER=6379
      - ALLOW_EMPTY_PASSWORD=yes

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL # Important for internal broker communication if you had more than one Kafka broker
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"
      DYNAMIC_CONFIG_ENABLED: "true"

  minio:
    image: minio/minio:latest
    ports:
      - "8002:8002"
      - "8001:8001"
    container_name: myminio
    environment:
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: password
    command: server /data --address ":8002" --console-address ":8001"
    volumes:
      - minio_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - http.port=9201
    ports:
      - "9201:9201"
    networks:
      - esnet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9201
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - esnet

volumes:
  zookeeper_data:
  kafka_data:
  minio_data:

networks:
  esnet:

    